{{- range .Values.nodeTags }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "ravendb-{{ . | lower }}"
  namespace: ravendb
  annotations: 
    ingress.kubernetes.io/ssl-passthrough: "true"
  labels:
    app.kubernetes.io/name: ravendb
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    helm.sh/chart: "{{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}"
    nodeTag: "{{.}}"
spec:
  selector:
    matchLabels:
      nodeTag: "{{.}}"
  serviceName: "ravendb-{{ . | lower }}"
  replicas: 1
  template:
    metadata:
      namespace: ravendb
      labels:
        nodeTag: "{{.}}"
    spec:
      dnsPolicy: Default
      serviceAccountName: modify-config
    
      initContainers:
      - name: "{{$.Chart.Name}}-init"
        # todo: use lighter distro to run the scripts
        image: "ubuntu:latest"  
        command: ["/bin/bash"]
        args: ["/ravendb/scripts/initialize-pod.sh"]

        volumeMounts:
          - name: ravendb-scripts
            mountPath: /ravendb/scripts
          - name: ravendb-setup-package
            mountPath: /usr/ravendb
          - name: ravendb-certs
            mountPath: /ravendb/certs

      containers:
      - name: ravendb-container
        image: "ravendb/ravendb:{{$.Values.ravenImageTag}}"
        imagePullPolicy: {{ $.Values.imagePullPolicy }}
        ports:
        - containerPort: 443
          name: https
        - containerPort: 38888
          name: tcp
          protocol: TCP

        env:
        - name: RAVEN_Setup_Mode
          value : {{ $.Values.setupMode }}

        - name: RAVEN_Security_Certificate_Load_Exec
          value: /ravendb/scripts/get-server-cert.sh

        - name: RAVEN_Security_Certificate_Exec_TimeoutInSec
          value: "60"

        {{ if eq $.Values.setupMode "LetsEncrypt" }}
        - name: RAVEN_Security_Certificate_LetsEncrypt_Email
          value: {{ $.Values.email }}

        - name: RAVEN_Security_Certificate_Change_Exec
          value: /ravendb/scripts/update-cert.sh
        {{ end }}

        - name: RAVEN_License
          value: {{ $.Values.license | toJson }}

        - name: RAVEN_License_Eula_Accepted
          value: 'true'

        - name: RAVEN_ServerUrl
          value: "https://0.0.0.0:443"
        - name: RAVEN_ServerUrl_Tcp
          value: "tcp://0.0.0.0:38888"

        - name: RAVEN_PublicServerUrl
          value: "https://{{ . | lower }}.{{$.Values.domain}}"
        - name: RAVEN_PublicServerUrl_Tcp
          value: "tcp://{{ . | lower }}-tcp.{{$.Values.domain}}:443"

        # The environmental values defined in the values.yaml should be listed below this comment while debugging
        {{ if ( $.Values.environment )}}
        {{- range $key, $val := $.Values.environment }}
        - name: {{ $key }}
          value: {{ $val }}
        {{ end -}}
        {{ end }}

        volumeMounts:
          - name: ravendb-scripts
            mountPath: /ravendb/scripts
          - name: ravendb-setup-package
            mountPath: /usr/ravendb
          - name: ravendb-certs
            mountPath: /ravendb/certs
          - name: "ravendb"
            mountPath: /var/lib/ravendb/data

      volumes:
        - name: ravendb-scripts
          configMap:
            name: ravendb-scripts
            defaultMode: 0755
        - name: ravendb-certs
          secret:
            secretName: ravendb-certs
        - name: ravendb-setup-package
          secret:
            secretName: ravendb-setup-package

  volumeClaimTemplates:
    - metadata:
        name: ravendb
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ $.Values.storageSize }}
---
{{- end }}
